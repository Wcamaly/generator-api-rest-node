const express = require('express')
const path = require('path')
const favicon = require('serve-favicon')
const logger = require('morgan')
const cookieParser = require('cookie-parser')
const bodyParser = require('body-parser')
const passport = require('passport')
const chalk = require('chalk')
const session = require('express-session')
const passportConfig = require('./configs/passport-config')

<% Object.keys(modules).forEach(function (variable) { -%>
const <%- variable %> = require('<%- modules[variable] %>')
<% }); -%>




const index = require('./routes/index');
const users = require('./routes/users');
const security = require('./routes/security')

const app = express();

// secret to session

const secret = process.env.SECRET_SESSION || 'kasjdhaskjdhaskj'


// uncomment after placing your favicon in /public
//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')))
// static confic files
app.use(express.static(path.join(__dirname, 'public')))


app.use(logger('dev'))
<% uses.forEach(function (use) { -%>
app.use(<%- use %>);
<% }); -%>

app.use(session({ secret: secret}))
app.use(bodyParser.urlencoded({ extended: false }))
app.use(bodyParser.json())


app.use(passportConfig(passport))
app.use(passport.session())

app.use('/', index);
app.use('/users', users);
app.use('/security', security)

// catch error handler, you can personalization those error
app.use((err, req, res, next) => {
  console.log(`${chalk.red('[Errro]')}: ${err.message}`)
  if (err.message.match(/not found/)) {
    return res.status(404).send({error: err.message})
  }

  if (err.message.match(/not authorized/) || err.message.match(/authorization token/)) {
    return res.status(401).send({error: err.message})
  }

  if (err.message.match(/Permission denied/)) {
    return res.status(403).send({error: err.message})
  }

  res.status(500).send({error: err.message})
})

// error handler
app.use(function(err, req, res, next) {
  // set locals, only providing error in development
  res.locals.message = err.message;
  res.locals.error = req.app.get('env') === 'development' ? err : {};

  // render the error page
  res.status(err.status || 500);
  res.render('error');
});

module.exports = app;
